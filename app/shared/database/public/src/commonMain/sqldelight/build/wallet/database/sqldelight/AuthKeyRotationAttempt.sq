import build.wallet.bitkey.app.AppGlobalAuthPublicKey;
import build.wallet.bitkey.app.AppRecoveryAuthPublicKey;
import build.wallet.bitkey.hardware.AppGlobalAuthKeyHwSignature;

CREATE TABLE authKeyRotationAttemptEntity(
  rowId                                     INTEGER NOT NULL PRIMARY KEY,
  destinationAppGlobalAuthKey               TEXT AS AppGlobalAuthPublicKey,
  destinationAppRecoveryAuthKey             TEXT AS AppRecoveryAuthPublicKey,
  destinationAppGlobalAuthKeyHwSignature    TEXT AS AppGlobalAuthKeyHwSignature
);

setKeyRotationProposal:
INSERT INTO authKeyRotationAttemptEntity(
    rowId, destinationAppGlobalAuthKey, destinationAppRecoveryAuthKey, destinationAppGlobalAuthKeyHwSignature
)
VALUES (0, NULL, NULL, NULL);

setAuthKeyCreated:
INSERT INTO authKeyRotationAttemptEntity(
    rowId, destinationAppGlobalAuthKey, destinationAppRecoveryAuthKey, destinationAppGlobalAuthKeyHwSignature
)
VALUES(0, ?, ?, ?);

getAuthKeyRotationAttempt:
SELECT
     destinationAppGlobalAuthKey,
     destinationAppRecoveryAuthKey,
     destinationAppGlobalAuthKeyHwSignature
FROM authKeyRotationAttemptEntity
WHERE rowId = 0;

clear:
DELETE FROM authKeyRotationAttemptEntity;
