-- Migration to add AppRecoveryAuthPublicKey to `appKeyBundleEntity.sq`

import build.wallet.bitkey.app.AppGlobalAuthPublicKey;
import build.wallet.bitkey.app.AppRecoveryAuthPublicKey;
import build.wallet.bitkey.app.AppSpendingPublicKey;

-- 1. Remove outdated `fullAccountView`.
--    Current view depends on tables which schemas we are about to change.
--    The view will be recreated at the end of the migration
DROP VIEW fullAccountView;

-- 2. Create table with new schema for `appKeyBundleEntity`.
--    Renames `authKey` column to `recoveryAuthKey` and adds optional `recoveryAuthKey` column.
CREATE TABLE appKeyBundleEntity_tmp(
  id              TEXT NOT NULL PRIMARY KEY,
  globalAuthKey   TEXT AS AppGlobalAuthPublicKey NOT NULL,
  spendingKey     TEXT AS AppSpendingPublicKey NOT NULL,
  recoveryAuthKey TEXT AS AppRecoveryAuthPublicKey
);

-- 3. Move over data from `appKeyBundleEntity`
--    Note that `recoveryAuthKey` is populated with `NULL` value by default.
--    This is done to ensure backwards compatability with existing full accounts.
--    The key will be generated and backfilled separately (BKR-573).
INSERT INTO appKeyBundleEntity_tmp
SELECT id, authKey, spendingKey, NULL
FROM appKeyBundleEntity;

-- 4. Delete old `appKeyBundleEntity` table
DROP TABLE appKeyBundleEntity;

-- 5. Rename new `appKeyBundleEntity` table
ALTER TABLE appKeyBundleEntity_tmp RENAME TO appKeyBundleEntity;

-- 6. Create table with new schema for `fullAccountEntity`.
--    No longer has the `appRecoveryAuthKey` column. Moved to `appKeyBundleEntity`.
CREATE TABLE fullAccountEntity_tmp(
  accountId           TEXT AS FullAccountId NOT NULL PRIMARY KEY,
  keyboxId            TEXT NOT NULL,
  FOREIGN KEY (keyboxId) REFERENCES keyboxEntity(id)
);

-- 7. Move over data from `fullAccountEntity`
INSERT INTO fullAccountEntity_tmp
SELECT accountId, keyboxId
FROM fullAccountEntity;

-- 8. Delete old `fullAccountEntity` table
DROP TABLE fullAccountEntity;

-- 9. Rename new `fullAccountEntity` table
ALTER TABLE fullAccountEntity_tmp RENAME TO fullAccountEntity;

-- 10. Create new `fullAccountView`
--    Rename `authKey` reference to `globalAuthKey` and add `recoveryAuthKey`.
CREATE VIEW fullAccountView AS
SELECT
  fullAccountEntity.accountId AS accountId,
  keyboxEntity.id AS keyboxId,
  keyboxEntity.inactiveKeysetIds,
  keyboxEntity.networkType,
  keyboxEntity.fakeHardware,
  keyboxEntity.f8eEnvironment,
  keyboxEntity.isTestAccount,
  keyboxEntity.isUsingSocRecFakes,
  keyboxEntity.delayNotifyDuration,
  spendingKeysetEntity.id AS spendingPublicKeysetId,
  spendingKeysetEntity.serverId AS spendingPublicKeysetServerId,
  spendingKeysetEntity.appKey,
  spendingKeysetEntity.hardwareKey,
  spendingKeysetEntity.serverKey,
  appKeyBundleEntity.id AS appKeyBundleId,
  appKeyBundleEntity.globalAuthKey,
  appKeyBundleEntity.recoveryAuthKey
FROM fullAccountEntity
-- keybox
INNER JOIN keyboxEntity
ON keyboxEntity.id = fullAccountEntity.keyboxId
-- spending public keyset
INNER JOIN spendingKeysetEntity
ON keyboxEntity.activeSpendingKeysetId = spendingKeysetEntity.id
-- bundle
INNER JOIN appKeyBundleEntity
ON keyboxEntity.activeKeyBundleId = appKeyBundleEntity.id;

-- 11. Run foreign key check
PRAGMA foreign_key_check;