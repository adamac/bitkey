[private]
default:
  just --list

gen-config := "terragrunt-atlantis-config generate \
    --workflow terragrunt \
    --output atlantis.yaml.gen \
    --create-project-name \
    --autoplan \
    --automerge \
    --parallel=false \
    --preserve-projects \
    --filter"

atlantis-yaml:
  {{ gen-config }} aws/bitkey/dev
  {{ gen-config }} aws/bitkey/stage
  {{ gen-config }} aws/bitkey/prod
  yq -i '(.projects[] | select(.name | test("^aws_bitkey_dev")) | .execution_order_group) = 1' atlantis.yaml.gen
  yq -i '(.projects[] | select(.name | test("^aws_bitkey_stage")) | .execution_order_group) = 2' atlantis.yaml.gen
  yq -i '(.projects[] | select(.name | test("^aws_bitkey_prod")) | .execution_order_group) = 3' atlantis.yaml.gen
  yq eval -i '.projects += load("aws/firmware-signer/atlantis.part.yaml").projects' atlantis.yaml.gen
  echo '# DO NOT EDIT: Generated with `just atlantis-yaml`' > atlantis.yaml
  cat atlantis.yaml.gen >> atlantis.yaml
  rm atlantis.yaml.gen

ci: init-linter lint fmt-ci validate

clean:
  # Delete all files ignored by .gitignore
  git clean -ffdX

fmt:
  terraform fmt --recursive
  terragrunt hclfmt

fmt-ci:
  just fmt
  git diff --exit-code

init-linter:
  tflint --init

# Need to pass in full path to the config file. --recursive seems to change the working directory and
# fail to find the config file if a relative path is used.
lint:
  cd modules && tflint -c $PWD/../.tflint.hcl --recursive

validate:
  #!/bin/bash
  set -e
  paths=( $(find modules -type d -path '*/.terraform' -prune -o -name 'main.tf' | xargs dirname) )
  for dir in ${paths[@]}; do
    (
      echo ""
      echo "##############################"
      echo "# Validating $dir"
      echo "##############################"
      echo ""

      cd $dir
      terraform init -backend=false
      # Workaround for https://github.com/hashicorp/terraform/issues/28490
      [[ -f providers.tf.validate-fix ]] && mv providers.tf.validate-fix providers.tf || true
      terraform validate
    )
  done
