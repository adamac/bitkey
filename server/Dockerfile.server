# syntax=docker/dockerfile:1.4
FROM scratch as source
COPY --link Cargo.lock .
COPY --link Cargo.toml .
COPY --link src src
COPY --link vendor vendor
COPY --link .cargo .cargo

FROM rust:alpine@sha256:4a7925c3974fab3fb68b3f4d93d1a4a36cb201f9f87b01014def219b125f1960 as toolchain
COPY --link rust-toolchain.toml .
RUN cargo version
RUN apk add --no-cache \
  git \
  musl-dev \
  openssl-dev  \
  pkgconfig \
  protobuf
RUN cargo install cargo-chef
ENV PROTOC=/usr/bin/protoc

FROM toolchain as planner
WORKDIR /usr/src
COPY --from=source . .
RUN cargo chef prepare --bin server --recipe-path recipe.json

FROM toolchain as builder
WORKDIR /usr/src
COPY --from=planner /usr/src/recipe.json recipe.json
RUN cargo chef cook --release --bin server --recipe-path recipe.json
COPY --from=source . .
RUN cargo --locked install --bin server --features partnerships --path src/api/server

FROM alpine@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b as deployable
COPY --from=builder /usr/local/cargo/bin/server /server
COPY --link src/api/Rocket.toml .
COPY --link src/api/resources resources
# needed to support ring (which we pull in via jsonwebtoken)
RUN apk add --no-cache libc6-compat
EXPOSE 80/tcp
ENV ROCKET_PROFILE=development
ENV OTEL_BSP_SCHEDULE_DELAY=500
ENTRYPOINT ["/server"]
CMD ["server"]
